/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { OidcSecurityStorage } from './oidc.security.storage';
export class OidcSecurityCommon {
    /**
     * @param {?} oidcSecurityStorage
     */
    constructor(oidcSecurityStorage) {
        this.oidcSecurityStorage = oidcSecurityStorage;
        this.storage_auth_result = 'authorizationResult';
        this.storage_access_token = 'authorizationData';
        this.storage_id_token = 'authorizationDataIdToken';
        this.storage_is_authorized = '_isAuthorized';
        this.storage_user_data = 'userData';
        this.storage_auth_nonce = 'authNonce';
        this.storage_code_verifier = 'code_verifier';
        this.storage_auth_state_control = 'authStateControl';
        this.storage_session_state = 'session_state';
        this.storage_silent_renew_running = 'storage_silent_renew_running';
        this.storage_custom_request_params = 'storage_custom_request_params';
    }
    /**
     * @return {?}
     */
    get authResult() {
        return this.retrieve(this.storage_auth_result);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set authResult(value) {
        this.store(this.storage_auth_result, value);
    }
    /**
     * @return {?}
     */
    get accessToken() {
        return this.retrieve(this.storage_access_token) || '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set accessToken(value) {
        this.store(this.storage_access_token, value);
    }
    /**
     * @return {?}
     */
    get idToken() {
        return this.retrieve(this.storage_id_token) || '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set idToken(value) {
        this.store(this.storage_id_token, value);
    }
    /**
     * @return {?}
     */
    get isAuthorized() {
        return this.retrieve(this.storage_is_authorized);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set isAuthorized(value) {
        this.store(this.storage_is_authorized, value);
    }
    /**
     * @return {?}
     */
    get userData() {
        return this.retrieve(this.storage_user_data);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set userData(value) {
        this.store(this.storage_user_data, value);
    }
    /**
     * @return {?}
     */
    get authNonce() {
        return this.retrieve(this.storage_auth_nonce) || '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set authNonce(value) {
        this.store(this.storage_auth_nonce, value);
    }
    /**
     * @return {?}
     */
    get code_verifier() {
        return this.retrieve(this.storage_code_verifier) || '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set code_verifier(value) {
        this.store(this.storage_code_verifier, value);
    }
    /**
     * @return {?}
     */
    get authStateControl() {
        return this.retrieve(this.storage_auth_state_control) || '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set authStateControl(value) {
        this.store(this.storage_auth_state_control, value);
    }
    /**
     * @return {?}
     */
    get sessionState() {
        return this.retrieve(this.storage_session_state);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set sessionState(value) {
        this.store(this.storage_session_state, value);
    }
    /**
     * @return {?}
     */
    get silentRenewRunning() {
        return this.retrieve(this.storage_silent_renew_running) || '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set silentRenewRunning(value) {
        this.store(this.storage_silent_renew_running, value);
    }
    /**
     * @return {?}
     */
    get customRequestParams() {
        return this.retrieve(this.storage_custom_request_params);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set customRequestParams(value) {
        this.store(this.storage_custom_request_params, value);
    }
    /**
     * @private
     * @param {?} key
     * @return {?}
     */
    retrieve(key) {
        return this.oidcSecurityStorage.read(key);
    }
    /**
     * @private
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    store(key, value) {
        this.oidcSecurityStorage.write(key, value);
    }
    /**
     * @param {?} isRenewProcess
     * @return {?}
     */
    resetStorageData(isRenewProcess) {
        if (!isRenewProcess) {
            this.store(this.storage_auth_result, '');
            this.store(this.storage_session_state, '');
            this.store(this.storage_silent_renew_running, '');
            this.store(this.storage_is_authorized, false);
            this.store(this.storage_access_token, '');
            this.store(this.storage_id_token, '');
            this.store(this.storage_user_data, '');
            this.store(this.storage_code_verifier, '');
        }
    }
    /**
     * @return {?}
     */
    getAccessToken() {
        return this.retrieve(this.storage_access_token);
    }
    /**
     * @return {?}
     */
    getIdToken() {
        return this.retrieve(this.storage_id_token);
    }
}
OidcSecurityCommon.decorators = [
    { type: Injectable }
];
/** @nocollapse */
OidcSecurityCommon.ctorParameters = () => [
    { type: OidcSecurityStorage }
];
if (false) {
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.storage_auth_result;
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.storage_access_token;
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.storage_id_token;
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.storage_is_authorized;
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.storage_user_data;
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.storage_auth_nonce;
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.storage_code_verifier;
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.storage_auth_state_control;
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.storage_session_state;
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.storage_silent_renew_running;
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.storage_custom_request_params;
    /**
     * @type {?}
     * @private
     */
    OidcSecurityCommon.prototype.oidcSecurityStorage;
}
//# sourceMappingURL=data:application/json;base64,