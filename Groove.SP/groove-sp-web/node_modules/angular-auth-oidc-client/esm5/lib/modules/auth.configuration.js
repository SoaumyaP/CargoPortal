/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Inject, Injectable, PLATFORM_ID } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
import { Subject } from 'rxjs';
var OpenIDImplicitFlowConfiguration = /** @class */ (function () {
    function OpenIDImplicitFlowConfiguration() {
        this.stsServer = 'https://localhost:44318';
        this.redirect_url = 'https://localhost:44311';
        // The Client MUST validate that the aud (audience) Claim contains its client_id value registered at the Issuer identified
        // by the iss (issuer) Claim as an audience.
        // The ID Token MUST be rejected if the ID Token does not list the Client as a valid audience,
        // or if it contains additional audiences not trusted by the Client.
        this.client_id = 'angularclient';
        this.response_type = 'id_token token';
        this.scope = 'openid email profile';
        // Only for Google Auth with particular G Suite domain, see https://developers.google.com/identity/protocols/OpenIDConnect#hd-param
        this.hd_param = '';
        this.post_logout_redirect_uri = 'https://localhost:44311/unauthorized';
        this.start_checksession = false;
        this.silent_renew = false;
        this.silent_renew_url = 'https://localhost:44311';
        this.silent_renew_offset_in_seconds = 0;
        this.silent_redirect_url = 'https://localhost:44311';
        this.post_login_route = '/';
        // HTTP 403
        this.forbidden_route = '/forbidden';
        // HTTP 401
        this.unauthorized_route = '/unauthorized';
        this.auto_userinfo = true;
        this.auto_clean_state_after_authentication = true;
        this.trigger_authorization_result_event = false;
        this.log_console_warning_active = true;
        this.log_console_debug_active = false;
        this.iss_validation_off = false;
        this.history_cleanup_off = false;
        // id_token C8: The iat Claim can be used to reject tokens that were issued too far away from the current time,
        // limiting the amount of time that nonces need to be stored to prevent attacks.The acceptable range is Client specific.
        this.max_id_token_iat_offset_allowed_in_seconds = 3;
        this.disable_iat_offset_validation = false;
        this.storage = typeof Storage !== 'undefined' ? sessionStorage : null;
    }
    return OpenIDImplicitFlowConfiguration;
}());
export { OpenIDImplicitFlowConfiguration };
if (false) {
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.stsServer;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.redirect_url;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.client_id;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.response_type;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.scope;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.hd_param;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.post_logout_redirect_uri;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.start_checksession;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.silent_renew;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.silent_renew_url;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.silent_renew_offset_in_seconds;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.silent_redirect_url;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.post_login_route;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.forbidden_route;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.unauthorized_route;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.auto_userinfo;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.auto_clean_state_after_authentication;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.trigger_authorization_result_event;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.log_console_warning_active;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.log_console_debug_active;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.iss_validation_off;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.history_cleanup_off;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.max_id_token_iat_offset_allowed_in_seconds;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.disable_iat_offset_validation;
    /** @type {?} */
    OpenIDImplicitFlowConfiguration.prototype.storage;
}
var AuthConfiguration = /** @class */ (function () {
    function AuthConfiguration(platformId) {
        this.platformId = platformId;
        this._onConfigurationChange = new Subject();
        this.defaultConfig = new OpenIDImplicitFlowConfiguration();
    }
    Object.defineProperty(AuthConfiguration.prototype, "stsServer", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.stsServer;
            }
            return this.defaultConfig.stsServer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "redirect_url", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.redirect_url;
            }
            return this.defaultConfig.redirect_url;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "silent_redirect_url", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.silent_renew_url;
            }
            return this.defaultConfig.silent_renew_url;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "client_id", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.client_id;
            }
            return this.defaultConfig.client_id;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "response_type", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.response_type;
            }
            return this.defaultConfig.response_type;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "scope", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.scope;
            }
            return this.defaultConfig.scope;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "hd_param", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.hd_param;
            }
            return this.defaultConfig.hd_param;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "post_logout_redirect_uri", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.post_logout_redirect_uri;
            }
            return this.defaultConfig.post_logout_redirect_uri;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "start_checksession", {
        get: /**
         * @return {?}
         */
        function () {
            if (!isPlatformBrowser(this.platformId)) {
                return false;
            }
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.start_checksession;
            }
            return this.defaultConfig.start_checksession;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "silent_renew", {
        get: /**
         * @return {?}
         */
        function () {
            if (!isPlatformBrowser(this.platformId)) {
                return false;
            }
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.silent_renew;
            }
            return this.defaultConfig.silent_renew;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "silent_renew_offset_in_seconds", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.silent_renew_offset_in_seconds;
            }
            return this.defaultConfig.silent_renew_offset_in_seconds;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "post_login_route", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.post_login_route;
            }
            return this.defaultConfig.post_login_route;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "forbidden_route", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.forbidden_route;
            }
            return this.defaultConfig.forbidden_route;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "unauthorized_route", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.unauthorized_route;
            }
            return this.defaultConfig.unauthorized_route;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "auto_userinfo", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.auto_userinfo;
            }
            return this.defaultConfig.auto_userinfo;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "auto_clean_state_after_authentication", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.auto_clean_state_after_authentication;
            }
            return this.defaultConfig.auto_clean_state_after_authentication;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "trigger_authorization_result_event", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.trigger_authorization_result_event;
            }
            return this.defaultConfig.trigger_authorization_result_event;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "isLogLevelWarningEnabled", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.log_console_warning_active;
            }
            return this.defaultConfig.log_console_warning_active;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "isLogLevelDebugEnabled", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.log_console_debug_active;
            }
            return this.defaultConfig.log_console_debug_active;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "iss_validation_off", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.iss_validation_off;
            }
            return this.defaultConfig.iss_validation_off;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "history_cleanup_off", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.history_cleanup_off;
            }
            return this.defaultConfig.history_cleanup_off;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "max_id_token_iat_offset_allowed_in_seconds", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.max_id_token_iat_offset_allowed_in_seconds;
            }
            return this.defaultConfig.max_id_token_iat_offset_allowed_in_seconds;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "disable_iat_offset_validation", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.disable_iat_offset_validation;
            }
            return this.defaultConfig.disable_iat_offset_validation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AuthConfiguration.prototype, "storage", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.openIDImplicitFlowConfiguration) {
                return this.openIDImplicitFlowConfiguration.storage;
            }
            return this.defaultConfig.storage;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} openIDImplicitFlowConfiguration
     * @return {?}
     */
    AuthConfiguration.prototype.init = /**
     * @param {?} openIDImplicitFlowConfiguration
     * @return {?}
     */
    function (openIDImplicitFlowConfiguration) {
        this.openIDImplicitFlowConfiguration = openIDImplicitFlowConfiguration;
        this._onConfigurationChange.next(openIDImplicitFlowConfiguration);
    };
    Object.defineProperty(AuthConfiguration.prototype, "onConfigurationChange", {
        get: /**
         * @return {?}
         */
        function () {
            return this._onConfigurationChange.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    AuthConfiguration.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    AuthConfiguration.ctorParameters = function () { return [
        { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
    ]; };
    return AuthConfiguration;
}());
export { AuthConfiguration };
if (false) {
    /**
     * @type {?}
     * @private
     */
    AuthConfiguration.prototype.openIDImplicitFlowConfiguration;
    /**
     * @type {?}
     * @private
     */
    AuthConfiguration.prototype.defaultConfig;
    /**
     * @type {?}
     * @private
     */
    AuthConfiguration.prototype._onConfigurationChange;
    /**
     * @type {?}
     * @private
     */
    AuthConfiguration.prototype.platformId;
}
//# sourceMappingURL=data:application/json;base64,